feed_title,feed_link,item_title,item_link,item_description,item_pub_date,topic
Talk Python To Me,https://talkpython.fm/,#295 GIS + Python,https://talkpython.fm/episodes/show/295/gis-python,"Geography is the study of places and the relationships between people and their environments. Often we think of maps, but maps are static. GIS gets interesting when you realize that we're studying and visualizing data flowing through these locations and communities. In this episode, you'll meet Silas Toms. He's an author of several Python GIS books and the host of The Mappist Hour podcast. Are you ready to dive into GIS with Python?Links from the showSilas on twitter Twitter: @loki_presidentSilas' Books:Mastering Geospatial Analysis with Python: Explore GIS processing and learn to work with GeoDjango, CARTOframes and MapboxGL-Jupyter: amazon.comArcPy and ArcGIS – Geospatial Analysis with Python: amazon.comArcPy and ArcGIS - Second Edition: Automating ArcGIS for Desktop and ArcGIS Online with Python: amazon.comThe Mappyist Hour podcast: themappyisthour.comPackagesGeoAlchemy ORM: geoalchemy-2.readthedocs.ioLeaflet.js: leafletjs.comMapbox GL: mapbox.comDeck GL: deck.glSponsorsTalk Python TrainingLinode",2020-12-18T00:00:00Z,#datascience #ds #podcast
Talk Python To Me,https://talkpython.fm/,#297 Python year in review (2020 edition),https://talkpython.fm/episodes/show/297/python-year-in-review-2020-edition,"2020 will be one for the history books, won't it? I've put together a great group to look back on 2020 - from the Python perspective. Join me along with Cecil Phillip, Ines Montani, Jay Miller, Paul Everitt, Reuven Lerner, Matt Harrison, and Brian Okken for a light-hearted and fun look back on the major Python events of 2020.Links from the showVideo version of this episode: youtube.comGuestsCecil Phillip: @cecilphillipInes Montani: @_inesmontaniJay Miller: @kjaymillerPaul Everitt: @paulweverittReuven Lerner: @reuvenmlernerMatt Harrison: @__mharrison__Brian Okken: @brianokkenSponsorsTalk Python Training",2020-12-28T00:00:00Z,#datascience #ds #podcast
Talk Python To Me,https://talkpython.fm/,#299 Personal search engine with datasette and dogsheep,https://talkpython.fm/episodes/show/299/personal-search-engine-with-datasette-and-dogsheep,"In this episode, we'll be discussing two powerful tools for data reporting and exploration: Datasette and Dogsheep.Datasette helps people take data of any shape or size, analyze and explore it, and publish it as an interactive website and accompanying API.Dogsheep is a collection of tools for personal analytics using SQLite and Datasette. Imagine a unified search engine for everything personal in your life such as twitter, photos, google docs, todoist, goodreads, and more, all in once place and outside of cloud companies.On this episode we talk with Simon Willison who created both of these projects. He's also one of the co-creators of Django and we'll discuss some early Django history!Links from the showDatasette: datasette.ioDogsheep: dogsheep.github.ioDatasheet newsletter: datasette.substack.comVideo: Build your own data warehouse for personal analytics with SQLite and Datasette: youtube.comExamplesList: github.comPersonal data warehouses: github.comGlobal power plants: datasettes.comSF data: datasettes.comFiveThirtyEight: fivethirtyeight.datasettes.comLahman’s Baseball Database: baseballdb.lawlesst.netLive demo of current main: datasette.ioSponsorsLinodeTalk Python Training",2021-01-17T00:00:00Z,#datascience #ds #podcast
Data Engineering Podcast,https://www.dataengineeringpodcast.com,Streaming Data Integration Without The Code at Equalum - Episode 161,https://www.dataengineeringpodcast.com/equalum-streaming-data-integration-episode-161/#utm_source=rss&utm_medium=rss,"The first stage of every good pipeline is to perform data integration. With the increasing pace of change and the need for up to date analytics the need to integrate that data in near real time is growing. With the improvements and increased variety of options for streaming data engines and improved tools for change data capture it is possible for data teams to make that goal a reality. However, despite all of the tools and managed distributions of those streaming engines it is still a challenge to build a robust and reliable pipeline for streaming data integration, especially if you need to expose those capabilities to non-engineers. In this episode Ido Friedman, CTO of Equalum, explains how they have built a no-code platform to make integration of streaming data and change data capture feeds easier to manage. He discusses the challenges that are inherent in the current state of CDC technologies, how they have architected their system to integrate well with existing data platforms, and how to build an appropriate level of abstraction for such a complex problem domain. If you are struggling with streaming data integration and change data capture then this interview is definitely worth a listen.",2020-11-30T23:36:49Z,#datascience #ds #podcast
Towards Data Science - Medium,https://towardsdatascience.com?source=rss----7f60cf5620c9---4,11 Crucial Mistakes To Avoid As A Data Scientist!,https://towardsdatascience.com/11-crucial-mistakes-to-avoid-as-a-data-scientist-71c29aef028?source=rss----7f60cf5620c9---4,What are eleven critical mistakes made by beginner Data Science enthusiasts?Continue reading on Towards Data Science »,2021-01-23T19:41:01Z,#datascience #tutorials
DEV Community,https://dev.to,Using Blockonomics Bitcoin Payments API,https://dev.to/aj54/using-blockonomics-bitcoin-payments-api-5021,"In this tutorial, we are going to use Blockonomics Payment API to receive Bitcoin payments on our website.      What is Blockonomics?Blockonomics is a decentralized Bitcoin payment solution that provides you with specialized transactional tools to enhance your BTC use. With Blockonomics, you can generate Bitcoins by accepting it on your online stores, as well as utilitarian features such as creating P2P invoices, sending emails via Bitcoin, and tracking your wallet addresses.       What we’re buildingWe will create an online shop that will accept Bitcoin payments using Blockonomics Payment API. Let’s get started!      Tech StackDjangoHTML/CSSJavascript      Setting UpBefore getting started, you can set up the local version of this tutorial using github repositorygit clone https://github.com/AJ-54/Blockonomics.gitpip install -r requirements.txt    Enter fullscreen mode        Exit fullscreen mode    Make sure you have your Blockonomics API Key handy. To get one for free, create your account and get to this page.Inside Blockonomics folder, go to  settings.py file and place your API KEY to the API_KEY variablepython manage.py migratepython manage.py runserver    Enter fullscreen mode        Exit fullscreen mode    Now, if you go to http://127.0.0.1:8000, you will be able to see the same screen like that of https://blockonomics.herokuapp.com      The Order Hook URLTo use the Bitcoin payments API, you need to set up the order hook URL at your merchant page on the Blockonomics website. Every time a transaction carried on the address associated with your API key changes its status, Blockonomics will use the order hook URL provided by you to notify you about the status update. Also, new transaction notifications are also provided using the same order hook URL.      The LogicIn order to integrate Blockonomics payment API, you should know how the process works. Firstly, you need the Blockonomics account and your API Key. Next, you should use a unique Bitcoin address every time you do a transaction. You can request a new address using the New Address API. Once the buyer uses that Bitcoin address to transfer the amount, you will get the status update from Blockonomics on the Order Hook URL provided by you. Thus, your backend logic must process the requests received at that endpoint to classify the transactions.      Payments AppI have created a core Django application called payments which is responsible for everything.       Understanding ModelsTo store the information about the transactions, I created an Invoice table. The table looks like thisclass Invoice(models.Model):    STATUS_CHOICES = ((-1,""Not Started""),(0,'Unconfirmed'),   (1,""Partially Confirmed""), (2,""Confirmed""))    product = models.ForeignKey(""Product"", on_delete=models.CASCADE)    status = models.IntegerField(choices=STATUS_CHOICES, default=-1)    order_id = models.CharField(max_length=250)    address = models.CharField(max_length=250, blank=True, null=True)    btcvalue = models.IntegerField(blank=True, null=True)    received = models.IntegerField(blank=True, null=True)    txid = models.CharField(max_length=250, blank=True, null=True)    rbf = models.IntegerField(blank=True, null=True)    created_at = models.DateField(auto_now=True)    Enter fullscreen mode        Exit fullscreen mode    The Invoice table stores the product for which the invoice is created, the address is the Bitcoin address used for this transaction. The btcvalue is the amount that you have charged from the buyer and received is the amount you receive from the buyer. Both these values will be in satoshi. The most important field is status which describes the current status of this transaction.       Creating Payment InvoiceOnce the user clicks on the price button, we process the request inside create_payment view. The job here is to create a new object in the Invoice table and then redirect the request to the track_invoice view.def exchanged_rate(amount):    url = ""https://www.blockonomics.co/api/price?currency=USD""    r = requests.get(url)    response = r.json()    return amount/response['price']def create_payment(request, pk):    product_id = pk    product = Product.objects.get(id=product_id)    url = 'https://www.blockonomics.co/api/new_address'    headers = {'Authorization': ""Bearer "" + settings.API_KEY}    r = requests.post(url, headers=headers)    print(r.json())    if r.status_code == 200:        address = r.json()['address']        bits = exchanged_rate(product.price)        order_id = uuid.uuid1()        invoice = Invoice.objects.create(order_id=order_id,                                address=address,btcvalue=bits*1e8, product=product)        return HttpResponseRedirect(reverse('payments:track_payment', kwargs={'pk':invoice.id}))    else:        print(r.status_code, r.text)        return HttpResponse(""Some Error, Try Again!"")    Enter fullscreen mode        Exit fullscreen mode          Order Hook URL EndpointThe receive_payment view is the endpoint for receiving status updates from Blockonomics. It is used to sync our Invoice table in the database with recent transactions and their status updates.def receive_payment(request):    if (request.method != 'GET'):        return     txid  = request.GET.get('txid')    value = request.GET.get('value')    status = request.GET.get('status')    addr = request.GET.get('addr')    invoice = Invoice.objects.get(address = addr)    invoice.status = int(status)    if (int(status) == 2):        invoice.received = value    invoice.txid = txid    invoice.save()    return HttpResponse(200)    Enter fullscreen mode        Exit fullscreen mode          Tracking Payment InvoiceYou can track any invoice if you know the invoice ID. The track_invoice view fetches the latest data of that invoice ID from our database and passes it to the frontend. It also passes whether the user has paid the required amount, if yes then the paid variable is also passed to the frontend. At this point, you can add your business logic.def track_invoice(request, pk):    invoice_id = pk    invoice = Invoice.objects.get(id=invoice_id)    data = {            'order_id':invoice.order_id,            'bits':invoice.btcvalue/1e8,            'value':invoice.product.price,            'addr': invoice.address,            'status':Invoice.STATUS_CHOICES[invoice.status+1][1],            'invoice_status': invoice.status,        }    if (invoice.received):        data['paid'] =  invoice.received/1e8        if (int(invoice.btcvalue) &lt;= int(invoice.received)):            data['path'] = invoice.product.product_image.url    else:        data['paid'] = 0      return render(request,'invoice.html',context=data)    Enter fullscreen mode        Exit fullscreen mode          Invoice Page Front EndIn the frontend, we have displayed all the data we get from track_invoice view. But, when the transaction status gets updated, how will the buyer know about it? To address this issue, we can either continuously pool our database to get the recent status of this invoice or we can use the WebSocket provided by Blockonomics. It is HIGHLY recommended to use WebSocket as continuous polling may have serious effects on system performance. Blockonomics pushes the status update through websocket as well, so your frontend will instantaneously know the changes, so you know that your page is now outdated. At this point, you can either reload the page to get recent data from track_invoice view or use AJAX calls to do the same. It is recommended to use a time out of 1 second, because receive_payment view will take some time to update the database with details and once you wait for a while, you are assured that your database is updated and thus you can perform the action.var socket = new WebSocket(""wss://www.blockonomics.co/payment/""+ address);socket.onmessage = function(event){  response = JSON.parse(event.data);  //This condition ensures that we reload only when we get a   //new payment status and don't go into a loop    if (parseInt(response.status) &gt; parseInt(status))    setTimeout(function(){window.location.reload() }, 1000); }    Enter fullscreen mode        Exit fullscreen mode          The EndThe video tutorial explaining the entire demo is attached below. In case you have queries, feel free to use the comment section!",2021-01-23T16:24:58Z,#datascience #tutorials
Blog – Machine Learning Mastery,https://machinelearningmastery.com,Univariate Function Optimization in Python,https://machinelearningmastery.com/univariate-function-optimization-in-python/,How to Optimize a Function with One Variable? Univariate function optimization involves finding the input to a function that results in the optimal output from an objective function. This is a common procedure in machine learning when fitting a model with one parameter or tuning a model that has a single hyperparameter. An efficient algorithm [&#8230;]The post Univariate Function Optimization in Python appeared first on Machine Learning Mastery.,2021-01-07T18:00:12Z,#datascience #tutorials
R-bloggers,https://www.r-bloggers.com,Bias reduction in Poisson and Tobit regression,http://feedproxy.google.com/~r/RBloggers/~3/mD3UjySH7V4/,"While it is well-known that data separation can cause infinite estimates in binary regression models, the same is also true for other models with a point mass at the bounday (typically at zero) such as Poisson and Tobit. It is shown why this ...The post Bias reduction in Poisson and Tobit regression first appeared on R-bloggers.",2021-01-19T17:00:00Z,#datascience #tutorials
FlowingData,https://flowingdata.com,Car cost vs. emissions,https://flowingdata.com/2021/01/21/car-cost-vs-emissions/,"Based on estimates from the MIT Trancik Lab, The New York Times plotted&#8230;Tags: cost, driving, electric vehicle, New York Times, Veronica Penney",2021-01-21T11:39:32Z,#dataviz
Graphic detail,https://www.economist.com/graphic-detail/,"Why Europe’s second, less severe lockdowns are working",https://www.economist.com/graphic-detail/2020/11/28/why-europes-second-less-severe-lockdowns-are-working,"The restrictions have limited the rate of new infections, especially from long trips",2020-11-28T00:00:00Z,#dataviz
Graphic detail,https://www.economist.com/graphic-detail/,Energy’s covid recovery,https://www.economist.com/graphic-detail/2020/10/15/energys-covid-recovery,"Demand for electricity has revived, despite uncertainty about the path of the virus",2020-10-15T00:00:00Z,#dataviz
Graphic detail,https://www.economist.com/graphic-detail/,Tracking covid-19 across the world,https://www.economist.com/graphic-detail/tracking-covid-19-across-the-world,Follow the global path of the coronavirus with our interactive guide,2021-01-21T00:00:00Z,#dataviz
Freakonomics Radio,http://freakonomics.com/,"212. The Economics of Sleep, Part 2",https://omny.fm/shows/freakonomics-radio/the-economics-of-sleep-part-2,People who sleep better earn more money. Now all we have to do is teach everyone to sleep better.,2015-07-16T03:00:00Z,#economics #podcast
Freakonomics Radio,http://freakonomics.com/,21. Bring on the Pain!,https://omny.fm/shows/freakonomics-radio/bring-on-the-pain,"It's not about how much something hurts -- it's how you remember the pain. This week, lessons on pain from the New York City subway, the professional hockey rink, and a landmark study of colonoscopy patients. So have a listen; we promise, it won't hurt a bit.",2011-02-09T21:55:00Z,#economics #podcast
Freakonomics Radio,http://freakonomics.com/,Extra: Shawn Johnson Full Interview,https://omny.fm/shows/freakonomics-radio/extra-shawn-johnson-full-interview,"A conversation with 2008 Olympic gold medalist Shawn Johnson, recorded for the Freakonomics Radio series “The Hidden Side of Sports.”",2018-10-01T03:00:00Z,#economics #podcast
Freakonomics Radio,http://freakonomics.com/,190. Time to Take Back the  Toilet,https://omny.fm/shows/freakonomics-radio/time-to-take-back-the-toilet,"Public bathrooms are noisy, poorly designed, and often nonexistent. What to do?",2016-06-09T03:00:00Z,#economics #podcast
Expedia Group Technology - Medium,https://medium.com/expedia-group-tech?source=rss----38998a53046f---4,Recursive Least Squares for Linear Contextual Bandits,https://medium.com/expedia-group-tech/recursive-least-squares-for-linear-contextual-bandits-8ac7fd93b398?source=rss----38998a53046f---4,NA,2020-12-15T14:03:30Z,#tech #engineering
Google Developers Blog,http://developers.googleblog.com/,How a group of young developers want to help us vote,http://developers.googleblog.com/feeds/4803387501729844053/comments/default,How a group of young developers want to help us vote,2020-10-27T11:09:44Z,#tech #engineering
Uber Engineering Blog,https://eng.uber.com,"Profiles in Coding: Diana Yanakiev, Uber ATG, Pittsburgh",https://eng.uber.com/profiles-in-coding-diana-yanakiev/,"Self-driving cars have long been considered the future of transportation, but they’re becoming more present everyday. Uber ATG (Advanced Technologies Group) is at the forefront of this technology, helping bring safe, reliable self-driving vehicles to the streets. Of course, &#8230;The post Profiles in Coding: Diana Yanakiev, Uber ATG, Pittsburgh appeared first on Uber Engineering Blog.",2020-06-16T16:00:43Z,#tech #engineering
Google AI Blog,http://ai.googleblog.com/,"MediaPipe Holistic — Simultaneous Face, Hand and Pose Prediction, on Device",http://ai.googleblog.com/feeds/2788316867928139076/comments/default,"MediaPipe Holistic — Simultaneous Face, Hand and Pose Prediction, on Device",2020-12-10T10:17:18Z,#tech #engineering
Science & technology,https://www.economist.com/science-and-technology/,Anti-covid-19 medicines are being approved too easily,https://www.economist.com/science-and-technology/2020/08/29/anti-covid-19-medicines-are-being-approved-too-easily,And maybe for the wrong reasons,2020-08-29T00:00:00Z,#tech #news
Science & technology,https://www.economist.com/science-and-technology/,Pfizer’s and BioNTech’s vaccine is the start of the end of the pandemic,https://www.economist.com/science-and-technology/2020/11/09/pfizers-and-biontechs-vaccine-is-the-start-of-the-end-of-the-pandemic,"Its 90% effectiveness is as good as it gets, and bodes well for other vaccines. But getting them quickly to the right people will be hard",2020-11-09T00:00:00Z,#tech #news
Science & technology,https://www.economist.com/science-and-technology/,A burrowing dinosaur,https://www.economist.com/science-and-technology/2020/09/24/a-burrowing-dinosaur,Chinese researchers have found a fossorial fossil,2020-09-24T14:53:11Z,#tech #news
Dataconomy,https://dataconomy.com,"Cyber-attacks increase threefold, yet there are 4m unfilled cybersecurity positions",https://dataconomy.com/2021/01/cyber-attacks-increase-threefold-4m-unfilled-cybersecurity-positions/,"In 2020, the world experienced an unprecedented increase in cybercrimes amid COVID-19. In fact, data breaches increase 273 percent in the first quarter, compared to 2019, according to a new study from cloud computing company Iomart. Thanks to the additional vulnerabilities that opened up as people work from home, moves to takeThe post Cyber-attacks increase threefold, yet there are 4m unfilled cybersecurity positions appeared first on Dataconomy.",2021-01-14T12:39:14Z,#tech #news
