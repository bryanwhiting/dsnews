feed_title,feed_link,item_title,item_link,item_description,item_pub_date,topic
Talk Python To Me,https://talkpython.fm/,#285 Dask as a Platform Service with Coiled,https://talkpython.fm/episodes/show/285/dask-as-a-platform-service-with-coiled,"If you're into data science, you've probably heard about Dask. It's a package that feels like familiar APIs such as Numpy, Pandas, and Scikit-Learn. Yet it can scale that computation across CPU cores on your local machine all the way to distributed grid-based computing in large clusters. While powerful, this may take some serious setup to execute in its full glory. That's why Matthew Rocklin has teamed up with Hugo Bowne-Anderson and others to launch a business to help Python loving data scientists run Dask workloads in the cloud. And they are here to tell us about they open-source foundation business.And they must be on to something, between recording and releasing this episode, they raised $5M in VC funding.Links from the showHugo on Twitter: @hugobowneMatthew on Twitter: @mrocklinCoiled: coiled.ioCoiled raised $5M in Sept: twitter.comA brief history of dask article: coiled.io/blogCoiled: Dask for Everyone, Everywhere: medium.comThe incredible growth of python: stackoverflow.blogGrowth updated (SO Trends current): insights.stackoverflow.comCoiled Youtube channel: youtube.comSnorkel package: pypi.orgSponsorsBrilliantMonday.comTalk Python Training",2020-10-09T00:00:00Z,#datascience #ds #podcast
Talk Python To Me,https://talkpython.fm/,#280 Python and AI in Journalism,https://talkpython.fm/episodes/show/280/python-and-ai-in-journalism,"If there has ever been a time in history that journalism is needed to shine a light on what's happening in the world, it's now. Would it surprise you to hear that Python and machine learning are playing an increasingly important role in discovering and bringing us the news? On this episode, you'll meet Carolyn Stansky, a journalist and developer who's been researching this intersection.Links from the showCarolyn on Twitter: @carolstranCarolyn on LinkedIn: linkedin.comCarolyn's site: workwithcarolyn.comCarolyn's talk: How AI is enhancing journalism: vimeo.comExamples of AI / automation in useQuakebot: bit.ly/quakebot-codeLA Homicide Tracker: homicide.latimes.comreportermate: github.comBuzzfeed Finding and tracking secret spy planes: bit.ly/buzzfeed-spy-planesNY Times comment moderation: bit.ly/nyt-commentsAl Jazzira: Drones in warzones: bit.ly/fmls-keynoteToolsQz.ai - Quartz AI Studio, focused on helping smaller papers and journalists: qz.aiFacets: github.ioGoogle News Initiative: bit.ly/google-niNewspaper3k Package: newspaper.readthedocs.ioFiveThirtyEight: fivethirtyeight.comGoogle News and Australia fight: bbc.comTwitter thread on American news overwhelming other countries: twitter.comSponsorsBrilliantTalk Python Training",2020-09-05T00:00:00Z,#datascience #ds #podcast
Data Engineering Podcast,https://www.dataengineeringpodcast.com,Better Data Quality Through Observability With Monte Carlo - Episode 155,https://www.dataengineeringpodcast.com/monte-carlo-observability-data-quality-episode-155/#utm_source=rss&utm_medium=rss,"In order for analytics and machine learning projects to be useful, they require a high degree of data quality. To ensure that your pipelines are healthy you need a way to make them observable. In this episode Barr Moses and Lior Gavish, co-founders of Monte Carlo, share the leading causes of what they refer to as data downtime and how it manifests. They also discuss methods for gaining visibility into the flow of data through your infrastructure, how to diagnose and prevent potential problems, and what they are building at Monte Carlo to help you maintain your data's uptime.",2020-10-19T23:12:09Z,#datascience #ds #podcast
Talk Python To Me,https://talkpython.fm/,#291 Operational Resilience with Pyomo,https://talkpython.fm/episodes/show/291/operational-resilience-with-pyomo,"Do you have a scientific system that needs optimization or solving? Our guest, on this episode, Clark Petri is here to tell us all about pyomo. This is a library that can solve all sorts of cool problems, linear programming, nonlinear equations, and many other things you can throw at it.  We're gonna solve a really fun diet problem: What is the most nutritious meal that you can eat for the least amount of money? The answer might surprise you a little bit! It's going to be a lot of fun. So listen in to hear about how Clark has used pyomo to do his work and how you might use it in yours.Links from the showPyomo: pyomo.orgClark on Twitter: @clarkpetriCenter for Infrastructure Defense: nps.eduThesis: apps.dtic.milI’m not alone in my work post: morenuance.comhandcalcs package: github.comDiet optimization problem: nbviewer.jupyter.orgTalk Python [Pro Edition]: talkpython.fm/proBlack Friday at Talk Python: talkpython.fm/blackfridaySponsorsTalk Python TrainingLinode",2020-11-22T00:00:00Z,#datascience #ds #podcast
DEV Community,https://dev.to,My beloved Ruby Cheat Sheet ,https://dev.to/rickavmaniac/my-beloved-ruby-cheat-sheet-208o,"Here is my cheat sheet I created along my learning journey. If you have any recommendations (addition/subtraction) let me know.Variables declaration# stringfull_name = 'Mike Taylor'# integercount = 20# floatbook_price = 15.80# booleansactive = trueadmin_user = false#Arrayfruits = ['Appel', 'Orange', 'Banana']#Conditional assignmenttitle = custom_title || “Default title”     Enter fullscreen mode        Exit fullscreen mode    print a string to the screen#print with line breakputs 'This string will print on screen'#print with no line breakprint 'The string will print with no line break'    Enter fullscreen mode        Exit fullscreen mode    string methods# get string number of characters'This is a string'.length  # 16#check if the string is empty'Hello World'.empty?   # false''.empty?   # true#convert all characters to uppercase'hello world'.upcase  # HELLO WORLD#convert all characters to lowercase'HI'.downcase  # hi#convert first characters to uppercase and the rest to lowercase'mikE'.capitalize  # Mike#remove white space'  This is a string with space  '.strip #return a string left justified and padded with a character'hello'.ljust(20, '.')  # 'hello...............'#check if a string include character(s)'hello World'.include? 'World'. # true #chaining 2 or more methods'Hello World'.downcase.include? 'world' # true#index position (start at postion 0)'Welcome to this web site'.index('this') # 11#return string character(s) (start at position 0)'This is a string'[1]  # h'This is a string'[0..3]  # This'This is a string'[-1]  # g (last character)#replace first sub string'Hello dog my dog'.sub 'dog', 'cat'. # Hello cat my dog#replace all sub string'Hello dog my dog'.gsub 'dog', 'cat'. # Hello cat my cat#split a string into an array'Apple Orange Banana'.split ' '  #['Apple', 'Orange', 'Banana']# get console keyboard inputinput = gets# get input and chomp last char (ex. new line)input = gets.chomp# get command-line arguments (ex. ruby main.rb arg1 arg2)puts ARGV  # ['arg1', 'arg2']ARGV.each { |option| puts option }    Enter fullscreen mode        Exit fullscreen mode    Numbersnumber.round 2.68  # 3number.floor 2.68  # 2number.ceil 2.68   # 32.next  # 3puts 3 / 2    # 1 (integers with integer result integer)puts 3 / 2.0  # 1.5 (float with integer result float)puts 2.even?  # trueputs 2.odd?   # false# Random numberrandom_number = rand(1..100)    Enter fullscreen mode        Exit fullscreen mode    Looploop do  puts ""Stop loop by using 'break' statement""  puts ""Skip one occurence by using 'next' statement""endwhile number &lt; 100  puts number  number += 1end# Range(1..10).each { |i| puts i }(1..10).each do |i|  puts iend10.times { puts ""Hello World"" }    Enter fullscreen mode        Exit fullscreen mode    Conditionals statement# Equal ==   And &amp;&amp;   Or ||   Not !if action == 1  puts ""action 1""elsif action &lt; 5  puts ""action not 1 but less than 5""else  puts ""action greater than 5""end#Unless (negated if)puts 'The user is not active' unless active == true#Ternary operatoractive ? 'The user is active' : 'The user is not active'#Truthy or falsy# false and nil equates to false. # Every other object like 1, 0, """" are all evaluated to true# case when elsecase pointswhen 0  ""Not good""when 1..50  ""Better but not great""when 51..70  ""Thats good!""when 71..99  ""Great""when 100  ""Perfect""else  ""Score error""    Enter fullscreen mode        Exit fullscreen mode    Array accessfruits = ['Apple', 'Orange', 'Banana']fruits = %w(Apple Orange Banana) fruits.length # 3fruits.first  # Applefruits.last   # Bananafruits[0]     # Applefruits[-2]    # Orangefruits[3]     # nilfruits[1..2]  # ['Orange', 'Banana']# iterationfruits.each do { |fruit| puts fruit } fruits.each_with_index do |fruit, index|  puts fruit  # Apple  puts index  # 0end    Enter fullscreen mode        Exit fullscreen mode    Array Methodsfruits.include? 'Orange'  # true[1, 5, 2, 4, 3].sort  # [1, 2, 3, 4, 5][1, 2, 3].reverse  # [3, 2, 1]fruits.push 'Strawberry' # append at the endfruits &lt;&lt;  'Raspberry' # append at the endfruits.unshift 'Strawberry' # Append in frontfruits.pop # remove lastfruits.delete_at(0) # remove first elementfruits.shift  # remove the first elementfruits.join ', '  # 'apple, orange, banana'    Enter fullscreen mode        Exit fullscreen mode    Convert between type123.to_s   # convert number to string ""123""""123"".to_i # convert string to integer 123""123"".to_f # convert string to float 123.0#convert to array(1..10).to_a  # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]('a'..'e').to_a # ['a', 'b', 'c', 'd', 'e']    Enter fullscreen mode        Exit fullscreen mode    Hashproduct = {}product['title'] = ""Mac Book Pro""product[:price] = 1599.99product = { 'title' =&gt; 'Mac Book Pro', 'price' =&gt; 1599.99 }product = { title: 'Mac Book Pro', price: 1599.99 }puts product.fetch(:cost, 0)  # return default value 0product.keys   # [:title, :price]product.values # ['Mac Book Pro', 1599.99]product.each do |key, value|   puts key  puts valueend    Enter fullscreen mode        Exit fullscreen mode    Date and timeTime.now.utc    # 2020-12-13 03:17:05 UTCTime.now.to_i   # Timestamp 1607829496christmas = Time.new(2020, 12, 25)  #puts christmas.wday # return 5 (Thursday)now = Time.now  # current time: 2020-12-13 03:08:15 +0000now.year    # 2020now.month   # 12now.day     # 13now.hour    # 3now.min     # 8now.sec     # 15now.sunday? # truepast = Time.now - 20  # return current time minus 20 secondspast_day = Time.now - 86400 # 60 secs * 60 mins * 24 hourspast_day = Time.now - 1.day # work only in Rail#Format Time# %d    Day of the month (01..31)# %m    Month of the year (01..12) Use %-m for (1..12)# %k    Hour (0..23)# %M    Minutes# %S    Seconds (00..60)# %I    Hour (1..12)# %p    AM/PM# %Y    Year# %A    Day of the week (name)# %B    Month (name)time = Time.newtime.strftime(""%d of %B, %Y"")    # ""25 of December, 2020""    Enter fullscreen mode        Exit fullscreen mode    Regular Expression (editor: www.rubular.com)zip_code = /\d{5}/""Hello"".match zip_code  # nil""White House zip: 20500"".match zip_code  # 20500""White House: 20500 and Air Force: 20330"".scan zip_code # ['20500', '20330'] ""Apple Orange Banana"".split(/\s+/) # ['Apple','Orange', 'Banana']    Enter fullscreen mode        Exit fullscreen mode    Functionsdef greeting(name = 'John')  # = default argument value  ""Hello #{name}""  # implicit returnendputs greeting('Paul')  # Hello Paul# variable number of argumentsdef greeting(*names)  names.each { |name| puts name }end#naming parametersdef display_product(price, options = {})  puts price, options[:hidden], options[:rounded]enddisplay_product 1599, hidden: false, rounded: true    Enter fullscreen mode        Exit fullscreen mode    Map, Select and Reduce#map (return a modified array)names = ['paul', 'john', 'peter']names_capitalize = names.map do |name|  name.capitalizeend# ['Paul', 'John', 'Peter']# short hand versionnames_capitalize = names.map { |name| name.capitalize }# Symbol to procnames_capitalize = names.map &amp;:capitalize#select (return matching)products = [  { name: 'Mac Book Pro', active: true, price: 1599.99 },  { name: 'iWatch', active: false, price: 599.99 },  { name: 'iPad Pro', active: true, price: 699.99 },]active_product = products.select { | product | product[:active] }#reduce (return one)total = products.reduce(0) do |total, product|   total = total + product[:price]endputs total  # 2899.97    Enter fullscreen mode        Exit fullscreen mode    Modulemodule Display  def hello    puts 'Hello'  endend# Mix inrequire_relative 'display.rb'class Customer  include DisplayendCustomer.new.hello# Module as namespacemodule Person  class Customer    def initialize(name)      @name = name    end  endendcustomer = Person::Customer.new('Mike Taylor')# Constantmodule Contact  ACCESS_KEY = 'abc123'  class Person      ACCESS_KEY = '123abc'  endendputs Contact::ACCESS_KEYputs Contact::Person::ACCESS_KEY#Module or class private methodmodule Display...def initialize  greetingendprivate  def greeting    puts 'hello'  endend    Enter fullscreen mode        Exit fullscreen mode    OOP# class declarationclass Productend# object instantiationproduct = Product.new # class declaration with constructor and instance variablesclass Product  def initialize(name, price, active)    @name = name    @price = price    @active = active  endendproduct = Product.new 'Mac Book Pro', 1599, true# attribute accessor (get &amp; set)class Product  attr_accessor :name, :price  # read and write  attr_reader :name   # read only  attr_write :price  # write only  ...end...puts product.price  # 1599# instance methodclass Product  ...  def price_with_tax    # reference to @price directly is not recommended    self.price + (self.price * tax_percent / 100)    # self keyword is optional  endend...puts product.price_with_tax # 1838.85#class method and variable (use self keyword)def self.calc_tax(amount) @@count = 1endputs Product::calc_tax(1599.99)# Inheritanceclass Customer &lt; Person  attr_accessor :number  def initialize(name, number)    super(name)    @number = number  endend    Enter fullscreen mode        Exit fullscreen mode    File I/O# Readtext = File.read('exemple.txt')# Read by lineslines = File.readlines(""exemple.txt"")lines.each do |line|  puts ""Line: #{line}""end# WriteFile.write('exemple.txt', 'text to write...')File.open(“index.html”, “w”) do | file |   file.puts ‘text to write’ end#read csvrequire 'csv'table = CSV.parse(File.read(""products.csv""), headers: true)table[0][""id""] # 1000table[0][""name""] # ""Mac Book Pro""#write csvproducts = [  { name: ""Mac Book Pro"", price: 1599 },  { name: ""IPad Pro"", price: 799 }]CSV.open(""products.csv"", ""w"", headers: products.first.keys) do |csv|  products.each { |product| csv &lt;&lt; product.values }end    Enter fullscreen mode        Exit fullscreen mode    Errors/Exceptions Handlingbegin  # Any exceptions here ex. 0 / 1  0 / 1 rescue  # ...will make this code to run  puts ""Exception""  do_something()end# Exception objectbegin  0 / 1rescue ZeroDivisionError =&gt; e  puts e.class.name  puts e.messageend    Enter fullscreen mode        Exit fullscreen mode",2020-12-14T18:51:50Z,#datascience #tutorials
Towards Data Science - Medium,https://towardsdatascience.com?source=rss----7f60cf5620c9---4,"Randomization: Sample, Assignment and Sequence",https://towardsdatascience.com/randomization-sample-assignment-and-sequence-38f347ae8647?source=rss----7f60cf5620c9---4,NA,2020-12-15T02:52:24Z,#datascience #tutorials
Towards Data Science - Medium,https://towardsdatascience.com?source=rss----7f60cf5620c9---4,Women in Politics · Exploratory Data Analysis in R,https://towardsdatascience.com/women-in-politics-exploratory-data-analysis-in-r-54bfd49dcd3a?source=rss----7f60cf5620c9---4,"It all started in Montana. In 1916, Jeannette Rankin, a peace activist and a strong advocate for women&#x2019;s suffrage, broke down&#x2026;Continue reading on Towards Data Science »",2020-12-15T03:40:06Z,#datascience #tutorials
Blog – Machine Learning Mastery,https://machinelearningmastery.com,Blending Ensemble Machine Learning With Python,https://machinelearningmastery.com/blending-ensemble-machine-learning-with-python/,"Blending is an ensemble machine learning algorithm. It is a colloquial name for stacked generalization or stacking ensemble where instead of fitting the meta-model on out-of-fold predictions made by the base model, it is fit on predictions made on a holdout dataset. Blending was used to describe stacking models that combined many hundreds of predictive [&#8230;]The post Blending Ensemble Machine Learning With Python appeared first on Machine Learning Mastery.",2020-11-29T18:00:41Z,#datascience #tutorials
Graphic detail,https://www.economist.com/graphic-detail/,How new swing techniques are revolutionising golf,https://www.economist.com/graphic-detail/2020/11/21/how-new-swing-techniques-are-revolutionising-golf,A bulked-up Bryson DeChambeau has discovered how to clobber the ball without sacrificing loft,2020-11-21T00:00:00Z,#dataviz
Graphic detail,https://www.economist.com/graphic-detail/,Why east and west German women still work vastly different hours,https://www.economist.com/graphic-detail/2020/10/02/why-east-and-west-german-women-still-work-vastly-different-hours,"Thirty years after reunification, eastern women are still more likely to work full-time",2020-10-02T00:00:00Z,#dataviz
Graphic detail,https://www.economist.com/graphic-detail/,"In America, far-right terrorist plots have outnumbered far-left ones in 2020",https://www.economist.com/graphic-detail/2020/10/27/in-america-far-right-terrorist-plots-have-outnumbered-far-left-ones-in-2020,This has been so in most years for the past quarter-century,2020-10-27T00:00:00Z,#dataviz
FlowingData,https://flowingdata.com,"Bill Nye on masks, with a map and some props",https://flowingdata.com/2020/12/09/bill-nye-on-masks-with-a-map-and-some-props/,"Talking about the effectiveness of masks, Bill Nye uses a map and some&#8230;Tags: Bill Nye, coronavirus, mask",2020-12-09T08:32:40Z,#dataviz
Freakonomics Radio,http://freakonomics.com/,What if Your Company Had No Rules?,https://omny.fm/shows/freakonomics-radio/what-if-your-company-had-no-rules,"Netflix co-founder Reed Hastings came to believe that corporate rules can kill creativity and innovation. In this latest edition of the Freakonomics Radio Book Club, guest host Maria Konnikova talks to Hastings about his new book, No Rules Rules, and why for some companies the greatest risk is taking no risks at all.",2020-09-12T12:00:00Z,#economics #podcast
Freakonomics Radio,http://freakonomics.com/,424. How to Make Your Own Luck,https://omny.fm/shows/freakonomics-radio/how-to-make-your-own-luck,"Before she decided to become a poker pro, Maria Konnikova didn’t know how many cards are in a deck. But she did have a Ph.D. in psychology, a brilliant coach, and a burning desire to know whether life is driven more by skill or chance. She found some answers in poker — and in her new book The Biggest Bluff, she’s willing to tell us everything she learned.",2020-07-02T03:00:00Z,#economics #podcast
Freakonomics Radio,http://freakonomics.com/,443. A Sneak Peek at Biden’s Top Economist,https://omny.fm/shows/freakonomics-radio/a-sneak-peek-at-biden-s-top-economist,"The incoming president argues that the economy and the environment are deeply connected. This is reflected in his choice for National Economic Council director — Brian Deese, a climate-policy wonk and veteran of the no-drama-Obama era. But don’t mistake Deese’s lack of drama for a lack of intensity.",2020-12-10T04:00:00Z,#economics #podcast
Freakonomics Radio,http://freakonomics.com/,Does Anyone Really Know What Socialism Is? (Ep. 408 Rebroadcast),https://omny.fm/shows/freakonomics-radio/does-anyone-really-know-what-socialism-is-ep-408-r,Trump says it would destroy us. Biden needs the voters who support it (especially the Bernie voters). The majority of millennials would like it to replace capitalism. But what is “it”? We bring in the economists to sort things out and tell us what the U.S. can learn from the good (and bad) experiences of other (supposedly) socialist countries.,2020-09-17T03:00:00Z,#economics #podcast
Facebook Research,https://research.fb.com,What video infrastructure research looks like at Facebook,https://research.fb.com/blog/2020/10/what-video-infrastructure-research-looks-like-at-facebook/,"Research informs everything we do at Facebook, from improving real-time augmented reality experiences to keeping people safe and secure on&#8230;The post What video infrastructure research looks like at Facebook appeared first on Facebook Research.",2020-10-29T18:05:10Z,#tech #engineering
Uber Engineering Blog,https://eng.uber.com,Announcing a New Framework for Designing Optimal Experiments with Pyro,https://eng.uber.com/oed-pyro-release/,"Experimentation is one of humanity’s principal tools for learning about our complex world. Advances in knowledge from medicine to psychology require a rigorous, iterative process in which we formulate hypotheses and test them by collecting and analyzing new evidence. At &#8230;The post Announcing a New Framework for Designing Optimal Experiments with Pyro appeared first on Uber Engineering Blog.",2020-05-12T16:00:15Z,#tech #engineering
strava-engineering - Medium,https://medium.com/strava-engineering?source=rss----89d4108ce2a3---4,The Boring Option,https://medium.com/strava-engineering/the-boring-option-4a7c6ad16ab8?source=rss----89d4108ce2a3---4,NA,2020-12-10T20:19:11Z,#tech #engineering
Expedia Group Technology - Medium,https://medium.com/expedia-group-tech?source=rss----38998a53046f---4,The Story Behind the Stories,https://medium.com/expedia-group-tech/the-story-behind-the-stories-409c1f606a17?source=rss----38998a53046f---4,NA,2020-12-01T14:03:07Z,#tech #engineering
Science & technology,https://www.economist.com/science-and-technology/,Robots that can walk are now striding to market,https://www.economist.com/science-and-technology/2020/08/25/robots-that-can-walk-are-now-striding-to-market,"They will be able to go where people can, but existing bots cannot",2020-08-25T00:00:00Z,#tech #news
Science & technology,https://www.economist.com/science-and-technology/,How weird weather can span the world,https://www.economist.com/science-and-technology/2020/09/12/how-weird-weather-can-span-the-world,Climate change is making the jet stream wilder,2020-09-12T00:00:00Z,#tech #news
Science & technology,https://www.economist.com/science-and-technology/,Siberia’s heatwave would not have happened without climate change,https://www.economist.com/science-and-technology/2020/07/15/siberias-heatwave-would-not-have-happened-without-climate-change,Few extreme weather events can be wholly pinned on greenhouse-gas emissions. This one can,2020-07-15T00:00:00Z,#tech #news
Science & technology,https://www.economist.com/science-and-technology/,What if the speed of light were that of a cyclist?,https://www.economist.com/science-and-technology/2020/07/18/what-if-the-speed-of-light-were-that-of-a-cyclist,A new paper revives a hero from physics’s past,2020-07-18T00:00:00Z,#tech #news
