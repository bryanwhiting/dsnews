feed_title,feed_link,item_title,item_link,item_description,item_pub_date,topic
Talk Python To Me,https://talkpython.fm/,#288 10 tips to move from Excel to Python,https://talkpython.fm/episodes/show/288/10-tips-to-move-from-excel-to-python,"Excel is one of the most used and most empowering piece of software out there. But that doesn't make it a good fit for every data processing need. And when you outgrow Excel, a really good option for a next step is Python and the data science tech stack: Pandas, Jupyter, and friends. Chris Moffitt is back on Talk Python to give us concrete tips and tricks for moving from Excel to Python!Links from the showChris on Twitter: @chris1610Practical Business Python: pbpython.comEscaping Excel Hell with Python and Pandas Episode 200: talkpython.fmSideTable package: pbpython.comLearn more and go deeperMove from Excel to Python with Pandas Course: training.talkpython.fmExcel to Python webcast: crowdcast.ioSponsorsVoyager gameLinodeTalk Python Training",2020-10-31T00:00:00Z,#datascience #ds #podcast
Data Engineering Podcast,https://www.dataengineeringpodcast.com,Add Version Control To Your Data Lake With LakeFS - Episode 157,https://www.dataengineeringpodcast.com/lakefs-data-lake-versioning-episode-157/#utm_source=rss&utm_medium=rss,"Data lakes are gaining popularity due to their flexibility and reduced cost of storage. Along with the benefits there are some additional complexities to consider, including how to safely integrate new data sources or test out changes to existing pipelines. In order to address these challenges the team at Treeverse created LakeFS to introduce version control capabilities to your storage layer. In this episode Einat Orr and Oz Katz explain how they implemented branching and merging capabilities for object storage, best practices for how to use versioning primitives to introduce changes to your data lake, how LakeFS is architected, and how you can start using it for your own data platform.",2020-11-03T00:47:03Z,#datascience #ds #podcast
Data Engineering Podcast,https://www.dataengineeringpodcast.com,Keeping A Bigeye On The Data Quality Market - Episode 160,https://www.dataengineeringpodcast.com/bigeye-data-quality-market-episode-160/#utm_source=rss&utm_medium=rss,"One of the oldest aphorisms about data is ""garbage in, garbage out"", which is why the current boom in data quality solutions is no surprise. With the growth in projects, platforms, and services that aim to help you establish and maintain control of the health and reliability of your data pipelines it can be overwhelming to stay up to date with how they all compare. In this episode Egor Gryaznov, CTO of Bigeye, joins the show to explore the landscape of data quality companies, the general strategies that they are using, and what problems they solve. He also shares how his own product is designed and the challenges that are involved in building a system to help data engineers manage the complexity of a data platform. If you are wondering how to get better control of your own pipelines and the traps to avoid then this episode is definitely worth a listen.",2020-11-23T23:26:25Z,#datascience #ds #podcast
Talk Python To Me,https://talkpython.fm/,#286 Python and ML at NASA Jet Propulsion Laboratory (JPL),https://talkpython.fm/episodes/show/286/python-and-ml-at-nasa-jet-propulsion-laboratory-jpl,"NASA's Jet Propulsion Laboratory (JPL)'s primary function is the construction and operation of planetary robotic spacecraft, though it also conducts Earth-orbit and astronomy missions. It is also responsible for operating NASA's Deep Space Network.  On this episode, you'll meet Chris Mattman. He's the Division Manager for the Artificial Intelligence, Analytics and Innovation at NASA JPL and he's JPL's first Principal Scientist in the area of Data Science. We cover a wide range of topics, and dive into how Python and open-source are growing in the space exploration field. And he answers the question of whether he thinks we'll have Python running on robots and rovers in space.Links from the showChris on Twitter: @chrismattmannChris at JPL: jpl.nasa.govNature: A vision for data science: nature.comOpen source at JPL: github.comApache Nutch: nutch.apache.org7 Minutes of Terror: The Challenges of Getting to Mars: youtube.comtqdm package: pypi.orgPanama Papers: wikipedia.orgSponsorsLinodeMonday.comTalk Python Training",2020-10-16T00:00:00Z,#datascience #ds #podcast
Blog ‚Äì Machine Learning Mastery,https://machinelearningmastery.com,Blending Ensemble Machine Learning With Python,https://machinelearningmastery.com/blending-ensemble-machine-learning-with-python/,"Blending is an ensemble machine learning algorithm. It is a colloquial name for stacked generalization or stacking ensemble where instead of fitting the meta-model on out-of-fold predictions made by the base model, it is fit on predictions made on a holdout dataset. Blending was used to describe stacking models that combined many hundreds of predictive [&#8230;]The post Blending Ensemble Machine Learning With Python appeared first on Machine Learning Mastery.",2020-11-29T18:00:41Z,#datascience #tutorials
Towards Data Science - Medium,https://towardsdatascience.com?source=rss----7f60cf5620c9---4,Statistical modeling with ‚ÄúPomegranate‚Äù ‚Äîfast and intuitive,https://towardsdatascience.com/statistical-modeling-with-pomegranate-fast-and-intuitive-4d605d9c33a9?source=rss----7f60cf5620c9---4,Pomegranate is a delicious fruit. It can also be a super useful Python library for statistical analysis. We will show how in this article.Continue reading on Towards Data Science ¬ª,2020-12-06T23:25:10Z,#datascience #tutorials
DEV Community,https://dev.to,Understanding attr methods in Ruby!,https://dev.to/kateh/understanding-attr-methods-in-ruby-412,"If you've worked with Ruby, you've likely encounter attr methods such as attr_accessor, attr_reader, and attr_writer sprinkled at the top of the class.To truly understand what each of these attr methods are and how to use them, we must understand the very basics of how data is stored in a Ruby class. (If you already have the basics down, skip to here!)      How is data stored and access in a Ruby class?Let‚Äôs say we‚Äôre creating a Ruby on Rails web app for a veterinary hospital üò∏üê∂. We want to store information about each dog patient. To start with, we will need a Dog class that stores name.In Ruby, this class may look something like the following:  class Dog    def initialize(name)      @name = name    end  end    Enter fullscreen mode        Exit fullscreen mode    Here, we have a Dog class. This Dog class has an initialize method which expects a name parameter. Within this initialize method we instantiate an instance variable @name which stores the nameparameter that is passed in when a Dog instance is created.      What is an instance variable?In Ruby, instance variables are prefixed with @. You may recognize instance variables being used to pass data between the controller and the view in a Ruby on Rails app. (Under the hood, Ruby on Rails is set up so that an instance variable in a controller method is accessible in the corresponding view.)Even outside of a Rails-y context, instance variables are used to store data for a regular Ruby class.      An instance variable can be accessed by any method within the class.Here's an Example:  class Dog    def initialize(name)      @name = name    end    def barks      ""#{@name} says WOOF"" # This method has access to @name    end  end    Enter fullscreen mode        Exit fullscreen mode    The catch here is that instance variables are accessible by any method within a class, but are NOT accessible outside the class.If instantiate a Dog instance and try to call .name, we get a NoMethodError:dog = Dog.new('Tomi')#=&gt; &lt;Dog:0x00007fb72cd0aa30 @name=""Tomi""&gt;dog.name#=&gt; NoMethodError: undefined method `name` for #&lt;Dog:0x00007fb72eab6bb0 @name=""Tomi""&gt;    Enter fullscreen mode        Exit fullscreen mode    If we want to read the @name value stored on a Dog instance, we'll need to access it through a method.Let's define a simple method that returns @name.  class Dog    def initialize(name)      @name = name    end    # Method that returns @name    def name      @name    end  end    Enter fullscreen mode        Exit fullscreen mode    Now we are able to access the value of @name by calling the name method!dog = Dog.new('Tomi')dog.name#=&gt; ""Tomi""    Enter fullscreen mode        Exit fullscreen mode    This simple name method we just defined is what we call a getter method.      A getter method returns the value of an instance variable.In the previous example, we had the name method simply return @name. However, if you wanted  @name to be returned in a certain format, you can easily achieve that by customizing your getter method.Let's write a custom getter method that returns dog.name in all caps:  class Dog    def initialize(name)      @name = name    end    def name      @name.upcase    end  end    Enter fullscreen mode        Exit fullscreen mode    dog = Dog.new('Tomi')#=&gt; #&lt;Dog:0x00007fb7475df010 @name=""Tomi""&gt;dog.name#=&gt; ""TOMI""    Enter fullscreen mode        Exit fullscreen mode    Notice that here, @name itself is not modified. We‚Äôve simply defined a method that returns @name in the desired format.Say we initialize a Dog instance but realize we have made a typo! If we try to reset name, we'll get a NoMethodError:dog = Dog.new('Tomu') # Whoops!dog.name = 'Tomi'#=&gt; NoMethodError: undefined method `name=' for #&lt;Dog:0x00007fb7483dd9a0 @name=""Tomu""&gt;    Enter fullscreen mode        Exit fullscreen mode    Similar to how we need to define a getter method to read the @name value, we also need a method to set @name a value. Though we're setting the value of @name on initialize, we don't have anything in place to change it later.We need a setter method!      A setter method sets the value of an instance variable.Let's create a setter method that allows us to change the name attribute:  class Dog    def initialize(name)      @name = name    end    # Getter method    def name      @name    end    # Setter method    def name=(name)      @name = name    end  end    Enter fullscreen mode        Exit fullscreen mode    Notice that a setter method follows the format def attribute=(attribute). Now with a setter method, we can easily update the value of @name:dog = Dog.new('Tomuu')dog.name = 'Tomi'dog#=&gt; #&lt;Dog:0x00007fb7483dd9a0 @name=""Tomi""&gt;    Enter fullscreen mode        Exit fullscreen mode          What is attr_accessor, attr_writer, and attr_reader?Now that we understand the basics of how data is stored and accessed in a Ruby class, let‚Äôs revisit the original question. What are these attr methods? Well... they're ‚ú®magic‚ú®!Getting and setting an attribute of a class is a pretty basic operation. If we want a Dog class that has name, breed, age, and any number of attributes, we need a getter and setter method for each of these attributes. Writing methods for something very simple can quickly get very repetitive.You might've heard of Ruby as a very developer-friendly language. Aside from being very human-readable, Ruby aims to make our lives easier via metaprogramming. In other words, as a programming language, Ruby takes care of a lot of things so that developers don't have to! attr methods are one of those things.      attr_accessor provides a shorthand way to define getter and setter methods for specified attributes.Desired attributes are passed in to attr methods as a symbol:  class Dog    attr_accessor :name, :breed, :age    def initialize(name, breed, age)      @name = name      @breed = breed      @age = age    end  end    Enter fullscreen mode        Exit fullscreen mode    With a single attr_accessor :name, :breed, :age line, we were able to define six methods!attr_accessor combines attr_reader and attr_writer. If you only want to shorthand a getter method, you can use attr_reader. If you want to shorthand a writer method, you can use attr_writer.attr_accessor - creates a getter and setter methodattr_reader - creates a getter method onlyattr_writer - creates a setter method onlyIt might make sense to use attr_reader or attr_writer in situations where we want to customize one method, but not the other.      Example: We want dog.age to return @age in a certain format, but don't want to change how @age is stored.  class Dog    attr_accessor :name, :breed    attr_writer :age # Default setter method to set @age    def initialize(name, breed, age)      @name = name      @breed = breed      @age = age    end    # Defining our own getter method to return a formatted age    def age      ""Age #{@age}""    end  end    Enter fullscreen mode        Exit fullscreen mode    dog = Dog.new('Tomi', 'pug', 2)#=&gt; #&lt;Dog:0x00007fb72debcdf0 @age=2, @breed=""pug"", @name=""Tomi""&gt;dog.age#=&gt; ""Age 2""dog#=&gt; #&lt;Dog:0x00007fb72debcdf0 @age=2, @breed=""pug"", @name=""Tomi""&gt;    Enter fullscreen mode        Exit fullscreen mode          Example: We want @age to always be set in a certain format.  class Dog    attr_accessor :name, :breed, :age    attr_reader :age # Default getter method to read @age    def initialize(name, breed, age)      @name = name      @breed = breed      @age = ""Age #{age}"" # Set @age to age in desired format.    end    # Defining our own setter method so @age is always set in desired format    def age=(age)      @age = ""Age #{age}""    end  end    Enter fullscreen mode        Exit fullscreen mode    dog = Dog.new('Tomi', 'pug', 2)#=&gt; #&lt;Dog:0x00007fb73383efe0 @age=""Age 2"", @breed=""pug"", @name=""Tomi""&gt;dog.age = 3#=&gt; 3dog#=&gt; #&lt;Dog:0x00007fb73383efe0 @age=""Age 3"", @breed=""pug"", @name=""Tomi""&gt;    Enter fullscreen mode        Exit fullscreen mode          ConclusionInstance variables hold data in a Ruby class instance.Instance variables can only be directly accessed within a Ruby class.To access an instance variable outside of a Ruby class, we must define methods.attr_reader, attr_writer, and attr_accessor are convenient shorthands for writinggetter and setter methods.",2020-12-07T00:15:34Z,#datascience #tutorials
R-bloggers,https://www.r-bloggers.com,"Advent of 2020, Day 6 ‚Äì Importing and storing data to Azure Databricks",http://feedproxy.google.com/~r/RBloggers/~3/PqrjTJVjJpM/,"Series of Azure Databricks posts: Dec 01:¬†What is Azure Databricks Dec 02:¬†How to get started with Azure Databricks Dec 03:¬†Getting to know the workspace and Azure Databricks¬†platform Dec 04:¬†Creating your first Azure Databricks¬†cluster Dec 05: Understanding Azure Databricks cluster architecture,‚Ä¶Read more ‚Ä∫The post Advent of 2020, Day 6 ‚Äì Importing and storing data to Azure Databricks first appeared on R-bloggers.",2020-12-06T04:01:00Z,#datascience #tutorials
Information is Beautiful,https://informationisbeautiful.net,Learn to Do Dataviz in Your Pyjamas!,http://feedproxy.google.com/~r/InformationIsBeautiful/~3/nMPUetC2N20/,"Due to current world events and popular demand, we‚Äôve moved all our training events to interactive online seminars. For the first time, you can learn our concept-driven approach to data-visualisation and infographics creation &#8211; online. https://informationisbeautiful.net/workshops/ The training format we use actually lends itself very well to a virtual set up. IIB founder &#038; author [&#8230;]",2020-03-26T11:45:59Z,#dataviz
Graphic detail,https://www.economist.com/graphic-detail/,How the pandemic has changed illegal-drug habits,https://www.economist.com/graphic-detail/2020/09/11/how-the-pandemic-has-changed-illegal-drug-habits,"A survey finds weed and prescription sedatives are up, party drugs are down",2020-09-11T00:00:00Z,#dataviz
Graphic detail,https://www.economist.com/graphic-detail/,Many European countries still have too many banks,https://www.economist.com/graphic-detail/2020/09/14/many-european-countries-still-have-too-many-banks,"The ECB hopes new rules will encourage more mergers, and higher profits",2020-09-14T00:00:00Z,#dataviz
Graphic detail,https://www.economist.com/graphic-detail/,America‚Äôs election of mistrust,https://www.economist.com/graphic-detail/2020/09/04/americas-election-of-mistrust,Abe assessed ‚Ä¢ The odd couple of finance ‚Ä¢ India‚Äôs cost of covid ‚Ä¢ Johnson‚Äôs competence questioned,2020-09-04T00:00:00Z,#dataviz
Freakonomics Radio,http://freakonomics.com/,"420. Which Jobs Will Come Back, and When?",https://omny.fm/shows/freakonomics-radio/which-jobs-will-come-back-and-when,"Covid-19 is the biggest job killer in a century. As the lockdown eases, what does re-employment look like? Who will be first and who last? Which sectors will surge and which will disappear? Welcome to the Great Labor Reallocation of 2020.",2020-06-04T03:00:00Z,#economics #podcast
Freakonomics Radio,http://freakonomics.com/,"422. Introducing ""No Stupid Questions""",https://omny.fm/shows/freakonomics-radio/introducing-no-stupid-questions,"In this new addition to the Freakonomics Radio Network, co-hosts Stephen Dubner and Angela Duckworth discuss the relationship between age and happiness. Also: does all creativity come from pain? New episodes of ""No Stupid Questions"" are released every Sunday evening ‚Äî please subscribe wherever you get your podcasts.",2020-06-18T03:00:00Z,#economics #podcast
Freakonomics Radio,http://freakonomics.com/,The Economics of Sports Gambling (Ep. 388 Rebroadcast),https://omny.fm/shows/freakonomics-radio/the-economics-of-sports-gambling-episode-388-rebro,What happens when tens of millions of fantasy-sports players are suddenly able to bet real money on real games? We‚Äôre about to find out. A recent Supreme Court decision has cleared the way to bring an estimated $300 billion in black-market sports betting into the light. We sort out the winners and losers.,2020-08-20T03:00:00Z,#economics #podcast
Freakonomics Radio,http://freakonomics.com/,441. Does Advertising Actually Work? (Part 2: Digital),https://omny.fm/shows/freakonomics-radio/does-advertising-actually-work-part-2-digital,"Google and Facebook are worth a combined $2 trillion, with the vast majority of their revenue coming from advertising. In our previous episode, we learned that TV advertising is much less effective than the industry says. Is digital any better? Some say yes, some say no ‚Äî and some say we‚Äôre in a full-blown digital-ad bubble.",2020-11-26T04:00:00Z,#economics #podcast
Python,https://devblogs.microsoft.com/python,Python in Visual Studio Code ‚Äì September 2020 Release,https://devblogs.microsoft.com/python/python-in-visual-studio-code-september-2020-release/,"We are pleased to announce that the¬†September¬†2020¬†release of the Python Extension for Visual Studio Code is now available. You can ‚ÄØdownload the Python extension‚ÄØ from the¬†Marketplace, or¬†install it directly from the extension gallery in Visual Studio Code.The post Python in Visual Studio Code ‚Äì September 2020 Release appeared first on Python.",2020-09-23T17:20:50Z,#tech #engineering
Uber AI Labs ‚Äì Uber Engineering Blog,https://eng.uber.com,Welcoming Peter Dayan to Uber AI Labs,https://eng.uber.com/peter-dayan/,"Zoubin Ghahramani is Uber‚Äôs Chief Scientist and head of Uber AI Labs, Uber‚Äôs research arm dedicated to artificial intelligence (AI) and machine learning. Below, Ghahramani introduces AI Labs‚Äô newest team member, award-winning neuroscientist Peter Dayan. ¬†We are thrilled to &#8230;The post Welcoming Peter Dayan to Uber AI Labs appeared first on Uber Engineering Blog.",2017-11-15T17:00:54Z,#tech #engineering
Python,https://devblogs.microsoft.com/python,Pylance introduces five new features that enable type magic for Python developers,https://devblogs.microsoft.com/python/pylance-introduces-five-new-features-that-enable-type-magic-for-python-developers/,"In last week‚Äôs Pylance update we introduced Semantic colorization, and thank you for all feedback! It was exciting for the team to bring this new feature to you. With the latest release of Pylance (version 2020.9.4) we are excited to introduce features that bring us closer to the goal of helping developers write correct Python code faster and more easily.The post Pylance introduces five new features that enable type magic for Python developers appeared first on Python.",2020-09-14T15:35:35Z,#tech #engineering
Facebook Engineering,https://engineering.fb.com,FioSynth: A representative I/O benchmark and data visualizer for data center workloads,https://engineering.fb.com/2020/11/18/open-source/fiosynth/,"What it is: FioSynth is a benchmark tool used to automate the execution of storage workload suites and to parse results. It contains a base set of block level storage workloads, synthesized from production I/O traces, that simulate a diverse range of Facebook production services. It is useful for predicting how a storage device will [...]Read More...The post FioSynth: A representative I/O benchmark and data visualizer for data center workloads appeared first on Facebook Engineering.",2020-11-18T18:14:30Z,#tech #engineering
Science & technology,https://www.economist.com/science-and-technology/,A device called Nemo will shed light on small-scale fisherfolk,https://www.economist.com/science-and-technology/2020/12/05/a-device-called-nemo-will-shed-light-on-small-scale-fisherfolk,No one knows the size of their catch,2020-12-05T00:00:00Z,#tech #news
Science & technology,https://www.economist.com/science-and-technology/,Why funnel-web spiders are so dangerous to people,https://www.economist.com/science-and-technology/2020/09/26/why-funnel-web-spiders-are-so-dangerous-to-people,They have not had the chance to evolve not to be,2020-09-26T00:00:00Z,#tech #news
Science & technology,https://www.economist.com/science-and-technology/,Kill one unwanted species and another arises,https://www.economist.com/science-and-technology/2020/10/31/kill-one-unwanted-species-and-another-arises,A tale of rats and palms on an atoll in the Pacific,2020-10-31T00:00:00Z,#tech #news
Science & technology,https://www.economist.com/science-and-technology/,"With the death of Arecibo, an era ends for radio astronomy",https://www.economist.com/science-and-technology/2020/11/25/with-the-death-of-arecibo-an-era-ends-for-radio-astronomy,A snapped cable has irreparably damaged the dish,2020-11-25T00:00:00Z,#tech #news
