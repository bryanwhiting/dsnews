feed_title,feed_link,item_title,item_link,item_description,item_pub_date,topic
Talk Python To Me,https://talkpython.fm/,"#287 Testing without dependencies, mocking in Python",https://talkpython.fm/episodes/show/287/testing-without-dependencies-mocking-in-python,"We know our unit tests should be relatively independent from other parts of the system. For example, running a test shouldn't generally call a credit card possessing API and talk to a database when your goal is just to test the argument validation. And yet, your method does all three of those and more. What do you do? Some languages use elaborate dependency passing frameworks that go under the banner of inversion of control (IoC) and dependency injections (DI). In Python, the most common fix is to temporarily redefine what those two functions do using patching and mocking.On this episode, we welcome back Anna-Lena Pokes to talk us through the whole spectrum of test doubles, dummies, mocks, and more.Links from the showAnna-Lena's personal site: alpopkes.com100 Days of Code episode: talkpython.fm/186Anna-Lena on Github: github.comPyCon talk from Lisa Road (2018) - “Demystifying the patch function”: youtube.comPyCon talk from Edwin Jung (2019) - Mocking and Patching Pitfalls: youtube.comKeynote talk “Finding Magic in Python” (about magical universeproject): youtube.comBlog post about mocking in Python: alpopkes.comStackoverflow post on difference between stubs and mocks: stackoverflow.comFreezegun project: github.comKI Macht Schule (AI goes to school): ki-macht-schule.deCode Combat: codecombat.comPDB++: github.comSponsorsLinodeMonday.comTalk Python Training",2020-10-21T00:00:00Z,#datascience #ds #podcast
Data Engineering Podcast,https://www.dataengineeringpodcast.com,Bringing Feature Stores and MLOps to the Enterprise At Tecton - Episode 166,https://www.dataengineeringpodcast.com/tecton-mlops-feature-store-episode-166/#utm_source=rss&utm_medium=rss,"As more organizations are gaining experience with data management and incorporating analytics into their decision making, their next move is to adopt machine learning. In order to make those efforts sustainable, the core capability they need is for data scientists and analysts to be able to build and deploy features in a self service manner. As a result the feature store is becoming a required piece of the data platform. To fill that need Kevin Stumpf and the team at Tecton are building an enterprise feature store as a service. In this episode he explains how his experience building the Michelanagelo platform at Uber has informed the design and architecture of Tecton, how it integrates with your existing data systems, and the elements that are required for well engineered feature store.",2021-01-05T00:44:57Z,#datascience #ds #podcast
Talk Python To Me,https://talkpython.fm/,#292 Pythonic identity (auth in Python ecosystem),https://talkpython.fm/episodes/show/292/pythonic-identity-auth-in-python-ecosystem,"So you're excited about that next app you're about to build. You can visualize the APIs with the smooth scalability taking to the mobile apps. You can see how, finally, this time, you'll get deployment right and it'll be pure continuous delivery out of GitHub with zero downtime. What you're probably not dreaming about is writing yet another password reset form and integrating mail capabilities just for this purpose. Or how you'll securely store user accounts the right way this time.Don't worry, we got you covered. Our guests, Christos Matskas and John Patrick Dandison are here to cover a bunch of different libraries and techniques we can use for adding identity to our Python applications.Links from the showChristos on Twitter: @christosmatskasJohn Patrick Dandison on Twitter: @azureandchillshhgit live: shhgit.comTwitch channel for Christos and JP: twitch.tv/425showPasslib & Folding: passlib.readthedocs.ioMicrosoft Authentication Library: github.com/AzureADauthlib - JavaScript Object Signing and Encryption draft implementation: github.comdjango-allauth - Authentication app for Django that ""just works"": github.comdjango-oauth-toolkit - OAuth 2 goodies for Django: github.compython-oauth2 - A fully tested, abstract interface to creating OAuth clients and servers: github.compython-social-auth - An easy-to-setup social authentication mechanism: github.comSponsorsTalk Python TrainingLinode",2020-11-26T00:00:00Z,#datascience #ds #podcast
Talk Python To Me,https://talkpython.fm/,#295 GIS + Python,https://talkpython.fm/episodes/show/295/gis-python,"Geography is the study of places and the relationships between people and their environments. Often we think of maps, but maps are static. GIS gets interesting when you realize that we're studying and visualizing data flowing through these locations and communities. In this episode, you'll meet Silas Toms. He's an author of several Python GIS books and the host of The Mappist Hour podcast. Are you ready to dive into GIS with Python?Links from the showSilas on twitter Twitter: @loki_presidentSilas' Books:Mastering Geospatial Analysis with Python: Explore GIS processing and learn to work with GeoDjango, CARTOframes and MapboxGL-Jupyter: amazon.comArcPy and ArcGIS – Geospatial Analysis with Python: amazon.comArcPy and ArcGIS - Second Edition: Automating ArcGIS for Desktop and ArcGIS Online with Python: amazon.comThe Mappyist Hour podcast: themappyisthour.comPackagesGeoAlchemy ORM: geoalchemy-2.readthedocs.ioLeaflet.js: leafletjs.comMapbox GL: mapbox.comDeck GL: deck.glSponsorsTalk Python TrainingLinode",2020-12-18T00:00:00Z,#datascience #ds #podcast
Blog – Machine Learning Mastery,https://machinelearningmastery.com,Multinomial Logistic Regression With Python,https://machinelearningmastery.com/multinomial-logistic-regression-with-python/,"Multinomial logistic regression is an extension of logistic regression that adds native support for multi-class classification problems. Logistic regression, by default, is limited to two-class classification problems. Some extensions like one-vs-rest can allow logistic regression to be used for multi-class classification problems, although they require that the classification problem first be transformed into multiple binary [&#8230;]The post Multinomial Logistic Regression With Python appeared first on Machine Learning Mastery.",2020-12-31T18:00:47Z,#datascience #tutorials
R-bloggers,https://www.r-bloggers.com,Simulating the dice game “Toss Up!” in R,http://feedproxy.google.com/~r/RBloggers/~3/BYcdUGiASx4/,"Toss Up! is a very simple dice game that I’ve always wanted to simulate but never got around to doing so (until now!). This post outlines how to simulate a Toss Up! game in R, as well as how to … Continue reading →The post Simulating the dice game “Toss Up!” in R first appeared on R-bloggers.",2021-01-11T01:54:32Z,#datascience #tutorials
DEV Community,https://dev.to,Server-Side Testing with Jest,https://dev.to/eaetukudo/server-side-testing-with-jest-1pj,"This is the last tutorial for the Test-driven Development with Nodejs, Express, Mongoose &amp; Jest series, in this tutorial we will focus on writing unit tests for the endpoints we built in the previous tutorial; Understanding MVC pattern in Nodejs.Recall that we had covered installing of the Jest package via npm, and writing our first test in Jest. If you are reading this series for the first time, please follow the first tutorial here to get up and running.Before we proceed, let's look at the topics covered in this tutorial.Unit TestingMocking Technique Parameterized testingConfiguring Jest to work with Nodejs      Unit TestingUnit testing is a software testing technique where individual units (components) of software is tested. The purpose of unit testing is to validate that each unit of the software performs individual tasks as designed. A unit is the smallest testable part of any software.      Mocking TechniqueMocking is a technique where dummy values are referenced during testing to emulate an actual scenario or real code. Mocking helps achieve isolation of tests. Mocking is applicable to unit testing.      Parameterized testingParameterized tests allow us to run the same test multiple times using different values. This approach will help our code to test for different cases and seniors. In jest the must popular function used in Parameterized Testing is the each() global function.      Configuring Jest to work with NodejsBecause Jest is primarily designed for testing React application so using Jest to test server-side applications (e.g: Nodejs) reacquires some configurations. Jest uses the jsdom test environment by default, it attempts to create a browser-like test environment in Node.js. Mongoose does not support jsdom in general and is not expected to function correctly in the jsdom test environment. To change your testEnvironment to Node.js, create a new file name jest.config.js within the root directory of your tdd-with-nodejs project, and copy-paste the code below to add testEnvironment to your jest.config.js file:module.exports = {  testEnvironment: 'node'};    Enter fullscreen mode        Exit fullscreen mode    Here we have explored a very basic config, you can read more about testing MongoDB with Jest here.      Testing the DB ConnectionNow that you are familiar with our todo-list, let's begin the business of the day. First, open your ""tdd-with-nodejs"" project in your favorite code editor, navigate into the test directory, Delete the sum.test.js, and create a new file named db-connection.test.js.Copy-paste the code below into your db-coonection.test.js file.require(""dotenv"").config();const mongoose = require(""mongoose"");const ArticleService = require(""../services/ArticleService"");describe(""Connection"", () =&gt; {  beforeAll(async () =&gt; {    await mongoose.connect(process.env.mongoURI, {        useNewUrlParser: true,        useCreateIndex: true,        useUnifiedTopology: true,    })  });  test(""Retrieve article by Id"", async () =&gt; {    const id = ""5ff2454f94eeee0a7acb5c30"";    const article =  await ArticleService.getArticlebyId(id);    expect(article.title).toBe(""This is another post example"");  });  afterAll(async done =&gt; {    mongoose.disconnect();    done();});});    Enter fullscreen mode        Exit fullscreen mode    To test our DB connection, we have to initiate a connection to our MongoDB database then subsequently testing if the connection was successful by attempting to retrieve data from our ""articles"" collection. We are using the Mocking Technique to test if the article with the specified id is in our database. Since the beforeAll() is the block of code that runs before the rest of our code, it is the right place to actually perform the DB connection. This line of code; expect(article.title).toBe(""This is another post example""); checks if the article returned from our DB has the title ""This is another post example""; Similarly the afterAll() function executes a code block after all the test have passed.      Testing the apiGetAllArticles endpointCreate a new file called get-all-articles.test.js in the test directory, and copy-paste the code below.require(""dotenv"").config();const mongoose = require(""mongoose"");const ArticleService = require(""../services/ArticleService"");describe(""Get all Articles"", () =&gt; {    beforeAll(async () =&gt; {        await mongoose.connect(process.env.mongoURI, {            useNewUrlParser: true,            useCreateIndex: true,            useUnifiedTopology: true,        })    });    test(""Get all Articles"", async() =&gt; {        const articles = await ArticleService.getAllArticles();        expect(articles).toEqual(expect.arrayContaining(articles));     });    afterAll(async done =&gt; {        mongoose.disconnect();        done();    });})    Enter fullscreen mode        Exit fullscreen mode    To validate if the output of our getAllArticles() endpoint returns an array, we make use of the expect(articles), toEqual(), and expect.arrayContaining(Array) function in Jest. Even as these functions come in handy, there's a great benefit to understand the logic behind their combination. Here, we are checking to see if the articles are returned from the database grouped in Array, what if there are no articles returned? The result will be an empty array []. Open your terminal, cd into your tdd-with-nodejs directory, copy-paste the code below to run the test.$ npm test    Enter fullscreen mode        Exit fullscreen mode    You should get a response similar to the screenshot below      Testing for CRUD operationrequire(""dotenv"").config();const mongoose = require(""mongoose"");const ArticleService = require(""../services/ArticleService"");describe(""Should perform CRUD on article Service"", () =&gt; {    beforeAll(async() =&gt; {        await mongoose.connect(process.env.mongoURI, {            useNewUrlParser: true,            useCreateIndex: true,            useUnifiedTopology: true,        })    });    test(""Creat article"", async() =&gt; {        const newArticle = {            title: ""All the test must pass"",            body: ""Should the test fail, we should work had to improve our code"",            avartar: ""https://dev-to-uploads.s3.amazonaws.com/i/blaf4ke2xt3j08mlx4ca.png"",        }        const article =  await ArticleService.createArticle(newArticle);        expect(article).toEqual(expect.objectContaining(article));    });    test(""Update article"", async() =&gt; {        const articleToUpdate = {            title: ""All the tests get passed"",            body: ""Should the test fail, we should work had to improve our codebase"",            avartar: ""https://dev-to-uploads.s3.amazonaws.com/i/blaf4ke2xt3j08mlx4ca.png"",        };        const article = await ArticleService.updateArticle(articleToUpdate);        expect(article).toEqual(expect.objectContaining(article));    });    test(""Get article by Id"", async() =&gt; {        const articleId = ""5ffcc8b0d7556519346f3bd8""        const article = await ArticleService.getArticlebyId(articleId);        expect(article).toEqual(expect.objectContaining(article));    });    test(""Delete article"", async() =&gt; {        const articleId = ""5ffcc8fcb6f631195c9a3529"";        const article =  await ArticleService.deleteArticle();        expect(article).toEqual(expect.objectContaining(article));    })    afterAll(async (done) =&gt; {        mongoose.disconnect();        done()    })})    Enter fullscreen mode        Exit fullscreen mode    Here we have put together all the testing techniques we have explored so far to perform a complete test of the article endpoint. Type the following command on your terminal for mac users or command-prompt for windows users.$ npm test    Enter fullscreen mode        Exit fullscreen mode    If you got everything set up correctly, you should have a response on your terminal similar to the one below:      ConclutionWe have been able to perform unit-testing all thanks to our MVC and Layered Structure design pattern we explored in our previous tutorial. The benefits of using clean architecture are enormous, it helps you to write easy readable, testable, and efficient code. Feel free to dive deeper into the Jest official Documentation, the developers at Facebook have done a lot of work there.The source-code for this series can be accessed hereThank you for reading, I will love to hear from you, please drop a comment.",2021-01-13T11:30:18Z,#datascience #tutorials
Towards Data Science - Medium,https://towardsdatascience.com?source=rss----7f60cf5620c9---4,Using keyword extraction for unsupervised text classification in NLP,https://towardsdatascience.com/using-keyword-extraction-for-unsupervised-text-classification-in-nlp-10433a1c0cf9?source=rss----7f60cf5620c9---4,A hybrid approach to an unsupervised classification taskContinue reading on Towards Data Science »,2021-01-14T04:25:24Z,#datascience #tutorials
Graphic detail,https://www.economist.com/graphic-detail/,The world desperately needs more nurses,https://www.economist.com/graphic-detail/2020/12/11/the-world-desperately-needs-more-nurses,Rich countries rely on poorer ones for their nurses. That risks making shortages worse,2020-12-11T00:00:00Z,#dataviz
FlowingData,https://flowingdata.com,Not so likely life of The Simpsons,https://flowingdata.com/2021/01/12/not-so-likely-life-of-the-simpsons/,"For The Atlantic, Dani Alexis Ryskamp compares the financials of The Simpsons against&#8230;Tags: Atlantic, median, money, The Simpsons, work",2021-01-12T17:51:38Z,#dataviz
FlowingData,https://flowingdata.com,Neural network creates images from text,https://flowingdata.com/2021/01/06/neural-network-creates-images-from-text/,"OpenAI trained a neural network that they call DALL·E with a dataset of&#8230;Tags: images, neural network, OpenAI, text",2021-01-06T08:32:01Z,#dataviz
Graphic detail,https://www.economist.com/graphic-detail/,Democracy in retreat,https://www.economist.com/graphic-detail/2020/11/27/democracy-in-retreat,Covid in America • Lockdown agonies • Bust budgets • Britain’s ugly farms,2020-11-27T00:00:00Z,#dataviz
Freakonomics Radio,http://freakonomics.com/,416. How Do You Reopen a Country?,https://omny.fm/shows/freakonomics-radio/how-do-you-reopen-a-country,"We speak with a governor, a former C.D.C. director, a pandemic forecaster, a hard-charging pharmacist, and a pair of economists — who say it’s all about the incentives. (Pandemillions, anyone?)",2020-04-30T03:00:00Z,#economics #podcast
Freakonomics Radio,http://freakonomics.com/,335. Does Doing Good Give You License to Be Bad?,https://omny.fm/shows/freakonomics-radio/does-doing-good-give-you-license-to-be-bad,"Corporate Social Responsibility programs can attract better job applicants who'll work for less money. But they also encourage employees to misbehave. Don't laugh — you too probably engage in “moral licensing,” even if you don't know it.",2018-05-17T03:00:00Z,#economics #podcast
Freakonomics Radio,http://freakonomics.com/,295. When Helping Hurts,https://omny.fm/shows/freakonomics-radio/when-helping-hurts,"Good intentions are nice, but with so many resources poured into social programs, wouldn't it be even nicer to know what actually works?",2017-07-13T03:00:00Z,#economics #podcast
Freakonomics Radio,http://freakonomics.com/,437. Many Businesses Thought They Were Insured for a Pandemic. They Weren’t.,https://omny.fm/shows/freakonomics-radio/many-businesses-thought-they-were-insured-for-a-pa,A fine reading of most policies for “business interruption” reveals that viral outbreaks aren’t covered. Some legislators are demanding that insurance firms pay up anyway. Is it time to rethink insurance entirely?,2020-10-29T03:00:00Z,#economics #podcast
Data Science in Airbnb Engineering &amp; Data Science on Medium,https://medium.com/airbnb-engineering/tagged/data-science?source=rss----53c7c27702d5--data_science,Data Quality at Airbnb,https://medium.com/airbnb-engineering/data-quality-at-airbnb-e582465f3ef7?source=rss----53c7c27702d5--data_science,NA,2020-11-03T20:38:07Z,#tech #engineering
Slack Engineering,https://slack.engineering,Scaling Datastores at Slack with Vitess,https://slack.engineering/scaling-datastores-at-slack-with-vitess/?utm_source=rss&utm_medium=rss&utm_campaign=scaling-datastores-at-slack-with-vitess,"From the very beginning of Slack, MySQL was used as the storage engine for all our data. Slack operated MySQL servers in an active-active configuration. This is the story of how we changed our data storage architecture from the active-active clusters over to Vitess &#8212; a horizontal scaling system for MySQL. Vitess is the present [&#8230;]The post Scaling Datastores at Slack with Vitess appeared first on Slack Engineering.",2020-12-01T16:16:15Z,#tech #engineering
Facebook Engineering,https://engineering.fb.com,"2020 year in review: Connectivity innovations, faster apps, and progress toward net zero",https://engineering.fb.com/2020/12/30/connectivity/2020-year-in-review/,"It goes without saying that 2020 has been a challenging year, to put it lightly. But if anything, the COVID-19 pandemic has shined a light on our need to connect as people. For Facebook, that meant our work has become more important than ever. Whether it was finding new and innovative ways to expand internet [...]Read More...The post 2020 year in review: Connectivity innovations, faster apps, and progress toward net zero appeared first on Facebook Engineering.",2020-12-30T17:00:18Z,#tech #engineering
Google Developers Blog,http://developers.googleblog.com/,Coral makes edge AI even more accessible in 2020,http://developers.googleblog.com/feeds/7843384728816159938/comments/default,Coral makes edge AI even more accessible in 2020,2020-11-25T10:03:17Z,#tech #engineering
Dataconomy,https://dataconomy.com,"Private, Keep Out: Why there’s nothing to fear in the privacy era",https://dataconomy.com/2020/12/private-keep-out-why-theres-nothing-to-fear-in-the-privacy-era/,"The continual evolution of the global data privacy landscape is a mostly positive trend. Still, it can also be confusing and concerning for businesses keen to ensure they don’t end up on the wrong side of data regulations.&#160; Recent developments include the enforcement of the California Consumer Privacy Act (CCPA)The post Private, Keep Out: Why there’s nothing to fear in the privacy era appeared first on Dataconomy.",2020-12-07T10:18:06Z,#tech #news
BBC News - Technology,https://www.bbc.co.uk/news/,Budget smartphones: What do you get for £100?,https://www.bbc.co.uk/news/technology-55355517,BBC Click's Chris Fox puts eight new budget smartphones to the test to see how they stack up.,2020-12-20T00:01:24Z,#tech #news
Startups – TechCrunch,https://techcrunch.com,Tresl’s Segments Analytics gives small online stores the same data analytics as large sellers,https://techcrunch.com/2021/01/14/tresls-segments-analytics-gives-small-online-stores-the-same-data-analytics-as-large-sellers/,"Tresl’s flagship product, e-commerce intelligence platform Segment Analytics, is designed to give small brands on Shopify access to the same kind of analytics larger online retailers have. Founded by former LinkedIn data scientists, Tresl is currently exhibiting at CES’ Taiwan Tech Arena. Segments Analytics analyzes a Shopify store’s data and then automatically sorts visitors into [&#8230;]",2021-01-14T09:54:43Z,#tech #news
Science & technology,https://www.economist.com/science-and-technology/,Super-loudhailers are becoming louder still,https://www.economist.com/science-and-technology/2020/12/10/super-loudhailers-are-becoming-louder-still,That is good for warfare. Perhaps less good for civilians,2020-12-10T15:53:35Z,#tech #news
